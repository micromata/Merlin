description = 'merlin-desktop'

buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        mavenCentral()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'com.google.osdetector'
apply plugin: 'kotlin'
ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : 'linux'

dependencies {
    implementation project(':merlin-core')
    implementation project(':merlin-server')

    implementation (libs.commons.lang3)
    implementation (libs.slf4j.log4j12)
    implementation (libs.jersey.container.servlet)
    implementation (libs.jetty.servlet)

    implementation "org.openjfx:javafx-base:11.0.1-ea+1:$platform"
    implementation "org.openjfx:javafx-graphics:11.0.1-ea+1:$platform"
    implementation "org.openjfx:javafx-controls:11.0.1-ea+1:$platform"
    implementation "org.openjfx:javafx-fxml:11.0.1-ea+1:$platform"

    compileOnly group: 'com.install4j', name: 'install4j-runtime', version: '7.0.8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls',
                '--add-modules', 'javafx.fxml'
        ]
    }
}

apply plugin: 'application'
mainClassName = "de.micromata.merlin.app.javafx.DesktopMain"

run() {
    doFirst {
        jvmArgs = [
                "-DapplicationHome=${rootDir}",
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.fxml'
        ]
    }
}

run.dependsOn ':merlin-webapp:npmBuild'
//run.dependsOn ':merlin-docs:buildWebDoc'

// ******* Distribution
task getDependencies(type: Copy) {
    into "${buildDir}/lib"
    from project(':merlin-desktop').configurations.runtimeClasspath {
        exclude "javafx-*.jar" // Ignore platform specific javafx files.
    }
}

task deleteDependencies(type: Delete) {
    delete "${buildDir}/dist"
}

task copyMerlinApp(type: Copy) {
    into "${buildDir}/lib"
    from project(':merlin-desktop').jar.archivePath
}

copyMerlinApp.mustRunAfter(jar)

getDependencies.dependsOn deleteDependencies
getDependencies.dependsOn copyMerlinApp


task dist {
    doLast {
        println "*************************************************"
        println "*** 1. Build installation files with Install4j **"
        println "*** 2. gradle postDist                         **"
        println "*************************************************"
    }
}

// Builds the distribution
distributions {
    main {
        contents {
            // Prepared by nbmBuild:
            from ("${project(':merlin-webapp').projectDir}/build") {
                into 'web'
            }
            // Containing test templates and other stuff:
            from ("${rootProject.projectDir}/examples") {
                into 'examples'
            }
        }
    }
}

dist.dependsOn distZip
distZip.dependsOn ':merlin-webapp:npmBuild'
//distZip.dependsOn ':merlin-docs:buildWebDoc'
distZip.dependsOn getDependencies
repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
