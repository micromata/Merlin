buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
}
apply plugin: 'kotlin'

allprojects {
    apply plugin: 'maven-publish'

    group = 'de.micromata.merlin'
    version = '1.1.16-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.9 // Needed: since 1.9 i18n properties in UTF-8 format.
    targetCompatibility = 1.9

    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:unchecked'
        options.deprecation = true
        options.encoding = 'UTF-8'
    }

    repositories {
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "https://maven.ej-technologies.com/repository" }
    }

    dependencies {
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        implementation 'io.github.microutils:kotlin-logging-jvm:2.0.6'
        testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
        testImplementation(
                'org.junit.jupiter:junit-jupiter-api:5.3.0'
        )
        testRuntimeOnly(
                'org.junit.jupiter:junit-jupiter-engine:5.3.0',
                'org.junit.vintage:junit-vintage-engine:5.3.0'
        )
    }

    test {
        useJUnitPlatform()
    }

    /*
    tasks.withType(Test) {
        testLogging {
            // set options for log level LIFECYCLE
            events TestLogEvent.FAILED,
                    TestLogEvent.PASSED,
                    TestLogEvent.SKIPPED,
                    TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
            showExceptions true
            showCauses true
            showStackTraces true

            // set options for log level DEBUG and INFO
            debug {
                events TestLogEvent.STARTED,
                        TestLogEvent.FAILED,
                        TestLogEvent.PASSED,
                        TestLogEvent.SKIPPED,
                        TestLogEvent.STANDARD_ERROR,
                        TestLogEvent.STANDARD_OUT
                exceptionFormat TestExceptionFormat.FULL
            }
            info.events = debug.events
            info.exceptionFormat = debug.exceptionFormat

            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                    def startItem = '|  ', endItem = '  |'
                    def repeatLength = startItem.length() + output.length() + endItem.length()
                    println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
                }
            }
        }
    }*/
}

wrapper {
    // Should match the version in gradle/wrapper/gradle-wrapper.properties
    gradleVersion = '6.2.2'
}
repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
